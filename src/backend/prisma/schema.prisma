generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MarketItemCategory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  code Int    @unique
  name String

  //Relations
  marketItems MarketItem[]

  @@map("market_item_category")
}

// 거래소 항목
model MarketItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  bundleCount Int    @map("bundle_count") // 묶음 판매 단위
  name        String
  imageSrc    String @map("image_src")
  refId       String @unique @map("ref_id")

  //Relations
  marketItemCategoryId Int                @map("market_item_category_id")
  marketItemCategory   MarketItemCategory @relation(fields: [marketItemCategoryId], references: [id], onDelete: Cascade)
  marketItemStats      MarketItemStat[]

  @@map("market_item")
}

model MarketItemStat {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  currentMinPrice Int      @map("current_min_price") // 최저가
  recentPrice     Int      @map("recent_price") // 최근 거래가
  scrapedAt       DateTime @map("scraped_at") @db.Timestamptz(6)
  yDayAvgPrice    Decimal  @map("y_day_avg_price") // 전일 평균 거래가

  //Relations
  marketItemId Int        @map("market_item_id")
  marketItem   MarketItem @relation(fields: [marketItemId], references: [id], onDelete: Cascade)

  @@map("market_item_stat")
}

model MinimumWage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  amount Int
  year   Int @unique

  @@map("minimum_wage")
}
