generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 경매장 아이템
model AuctionItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  name                 String
  imageSrc             String  @map("image_src")
  isStatScraperEnabled Boolean @default(false) @map("is_stat_scraper_enabled")

  //Relations
  auctionItemStats AuctionItemStat[]

  @@map("auction_item")
}

model AuctionItemStat {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  buyPrice      Int @map("buy_price") // 즉시 구매가
  bidPrice      Int @map("bid_price") // 현재 최고가
  bidStartPrice Int @map("bid_start_price") // 최소 입찰가
  startPrice    Int @map("start_price") // 시작 입찰가

  IsCompetitive Boolean  @default(false) @map("is_competitive") // 경쟁 입찰 여부
  endDate       DateTime @map("end_date") // 경매 종료일

  //Relations
  auctionItemId Int         @map("auction_item_id")
  auctionItem   AuctionItem @relation(fields: [auctionItemId], references: [id], onDelete: Cascade)

  @@map("auction_item_stat")
}

model MarketItemCategory {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  code                 Int     @unique
  isItemScraperEnabled Boolean @default(false) @map("is_item_scraper_enabled")
  name                 String

  //Relations
  marketItems MarketItem[]

  @@map("market_item_category")
}

// 거래소 아이템
model MarketItem {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz(6)

  bundleCount          Int     @map("bundle_count") // 묶음 판매 단위
  name                 String
  imageSrc             String  @map("image_src")
  isStatScraperEnabled Boolean @default(false) @map("is_stat_scraper_enabled")
  refId                Int     @unique @map("ref_id")

  //Relations
  marketItemCategoryId Int                @map("market_item_category_id")
  marketItemCategory   MarketItemCategory @relation(fields: [marketItemCategoryId], references: [id], onDelete: Cascade)
  marketItemStats      MarketItemStat[]

  @@map("market_item")
}

model MarketItemStat {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  currentMinPrice Int     @map("current_min_price") // 최저가
  recentPrice     Int     @map("recent_price") // 최근 거래가
  yDayAvgPrice    Decimal @map("y_day_avg_price") // 전일 평균 거래가

  //Relations
  marketItemId Int        @map("market_item_id")
  marketItem   MarketItem @relation(fields: [marketItemId], references: [id], onDelete: Cascade)

  @@map("market_item_stat")
}

model MinimumWage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  amount Int
  year   Int @unique

  @@map("minimum_wage")
}
