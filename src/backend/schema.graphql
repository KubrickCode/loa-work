# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Content {
  contentCategory: ContentCategory!
  contentCategoryId: Int!
  contentRewards: [ContentReward!]!
  createdAt: DateTime!
  displayName: String!
  duration: Int!
  gate: Int
  id: Int!
  isSeeMore: Boolean
  level: Int!
  name: String!
  updatedAt: DateTime!
  wage: Int!
  wageFilter: ContentWageFilter
}

type ContentCategory {
  createdAt: DateTime!
  id: Int!
  name: String!
  updatedAt: DateTime!
}

input ContentListFilter {
  contentCategoryId: Int
  includeIsSeeMore: Boolean
  wageFilter: ContentListWageFilter
}

input ContentListWageFilter {
  includeIsBound: Boolean
  includeIsSeeMore: Boolean
}

type ContentReward {
  averageQuantity: Float!
  createdAt: DateTime!
  id: Int!
  isSellable: Boolean!
  itemName: String!
  updatedAt: DateTime!
}

type ContentWageFilter {
  includeIsBound: Boolean
  includeIsSeeMore: Boolean
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type MarketItem {
  bundleCount: Int!
  createdAt: DateTime!
  id: Int!
  imageSrc: String!
  isStatScraperEnabled: Boolean!
  name: String!
  refId: Int!
  updatedAt: DateTime!
}

type MinimumWage {
  amount: Int!
  createdAt: DateTime!
  id: Int!
  updatedAt: DateTime!
  year: Int!
}

type Query {
  contentCategories: [ContentCategory!]!
  contentList(filter: ContentListFilter): [Content!]!
  contentRewardViewList: [String!]!
  marketItemList: [MarketItem!]!
  minimumWage: MinimumWage!
}