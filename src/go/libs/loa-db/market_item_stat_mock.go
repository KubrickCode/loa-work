// Code generated by MockGen. DO NOT EDIT.
// Source: market_item_stat.go
//
// Generated by this command:
//
//	mockgen -source=market_item_stat.go -package=loadb -self_package=github.com/KubrickCode/loa-work/src/go/libs/loadb
//

// Package loadb is a generated GoMock package.
package loadb

import (
	reflect "reflect"

	models "github.com/KubrickCode/loa-work/src/go/libs/loadb/models"
	gomock "go.uber.org/mock/gomock"
)

// MockMarketItemStatRepository is a mock of MarketItemStatRepository interface.
type MockMarketItemStatRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMarketItemStatRepositoryMockRecorder
	isgomock struct{}
}

// MockMarketItemStatRepositoryMockRecorder is the mock recorder for MockMarketItemStatRepository.
type MockMarketItemStatRepositoryMockRecorder struct {
	mock *MockMarketItemStatRepository
}

// NewMockMarketItemStatRepository creates a new mock instance.
func NewMockMarketItemStatRepository(ctrl *gomock.Controller) *MockMarketItemStatRepository {
	mock := &MockMarketItemStatRepository{ctrl: ctrl}
	mock.recorder = &MockMarketItemStatRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMarketItemStatRepository) EXPECT() *MockMarketItemStatRepositoryMockRecorder {
	return m.recorder
}

// CreateMany mocks base method.
func (m *MockMarketItemStatRepository) CreateMany(stats []*models.MarketItemStat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMany", stats)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMany indicates an expected call of CreateMany.
func (mr *MockMarketItemStatRepositoryMockRecorder) CreateMany(stats any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMany", reflect.TypeOf((*MockMarketItemStatRepository)(nil).CreateMany), stats)
}

// GetLatestStatsByItemID mocks base method.
func (m *MockMarketItemStatRepository) GetLatestStatsByItemID(itemID, limit int) ([]*models.MarketItemStat, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestStatsByItemID", itemID, limit)
	ret0, _ := ret[0].([]*models.MarketItemStat)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestStatsByItemID indicates an expected call of GetLatestStatsByItemID.
func (mr *MockMarketItemStatRepositoryMockRecorder) GetLatestStatsByItemID(itemID, limit any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestStatsByItemID", reflect.TypeOf((*MockMarketItemStatRepository)(nil).GetLatestStatsByItemID), itemID, limit)
}
