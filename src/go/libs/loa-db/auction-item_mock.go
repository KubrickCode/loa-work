// Code generated by MockGen. DO NOT EDIT.
// Source: ./auction-item.go
//
// Generated by this command:
//
//	mockgen -source=./auction-item.go -package=loadb -self_package=github.com/KubrickCode/loa-work/src/go/libs/loadb
//

// Package loadb is a generated GoMock package.
package loadb

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockAuctionItemDB is a mock of AuctionItemDB interface.
type MockAuctionItemDB struct {
	ctrl     *gomock.Controller
	recorder *MockAuctionItemDBMockRecorder
	isgomock struct{}
}

// MockAuctionItemDBMockRecorder is the mock recorder for MockAuctionItemDB.
type MockAuctionItemDBMockRecorder struct {
	mock *MockAuctionItemDB
}

// NewMockAuctionItemDB creates a new mock instance.
func NewMockAuctionItemDB(ctrl *gomock.Controller) *MockAuctionItemDB {
	mock := &MockAuctionItemDB{ctrl: ctrl}
	mock.recorder = &MockAuctionItemDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuctionItemDB) EXPECT() *MockAuctionItemDBMockRecorder {
	return m.recorder
}

// FindStatScraperEnabledAll mocks base method.
func (m *MockAuctionItemDB) FindStatScraperEnabledAll() ([]AuctionItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindStatScraperEnabledAll")
	ret0, _ := ret[0].([]AuctionItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindStatScraperEnabledAll indicates an expected call of FindStatScraperEnabledAll.
func (mr *MockAuctionItemDBMockRecorder) FindStatScraperEnabledAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindStatScraperEnabledAll", reflect.TypeOf((*MockAuctionItemDB)(nil).FindStatScraperEnabledAll))
}

// FindWithStatsByName mocks base method.
func (m *MockAuctionItemDB) FindWithStatsByName(name string, take int) (AuctionItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindWithStatsByName", name, take)
	ret0, _ := ret[0].(AuctionItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindWithStatsByName indicates an expected call of FindWithStatsByName.
func (mr *MockAuctionItemDBMockRecorder) FindWithStatsByName(name, take any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindWithStatsByName", reflect.TypeOf((*MockAuctionItemDB)(nil).FindWithStatsByName), name, take)
}
