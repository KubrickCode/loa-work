// Code generated by MockGen. DO NOT EDIT.
// Source: ./market-item-stat.go
//
// Generated by this command:
//
//	mockgen -source=./market-item-stat.go -package=loadb -self_package=github.com/KubrickCode/loa-work/src/go/libs/loadb
//

// Package loadb is a generated GoMock package.
package loadb

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMarketItemStatDB is a mock of MarketItemStatDB interface.
type MockMarketItemStatDB struct {
	ctrl     *gomock.Controller
	recorder *MockMarketItemStatDBMockRecorder
	isgomock struct{}
}

// MockMarketItemStatDBMockRecorder is the mock recorder for MockMarketItemStatDB.
type MockMarketItemStatDBMockRecorder struct {
	mock *MockMarketItemStatDB
}

// NewMockMarketItemStatDB creates a new mock instance.
func NewMockMarketItemStatDB(ctrl *gomock.Controller) *MockMarketItemStatDB {
	mock := &MockMarketItemStatDB{ctrl: ctrl}
	mock.recorder = &MockMarketItemStatDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMarketItemStatDB) EXPECT() *MockMarketItemStatDBMockRecorder {
	return m.recorder
}

// CreateMany mocks base method.
func (m *MockMarketItemStatDB) CreateMany(stats []MarketItemStat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMany", stats)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMany indicates an expected call of CreateMany.
func (mr *MockMarketItemStatDBMockRecorder) CreateMany(stats any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMany", reflect.TypeOf((*MockMarketItemStatDB)(nil).CreateMany), stats)
}
